{"version":3,"sources":["src/data/TranchesPositions.js","src/utils/utils.js"],"names":["TranchesPositions","x","y","addTextToImage","imagePath","positions","texts","Promise","resolve","_reject","canvas","document","getElementById","context","getContext","img","Image","src","onload","width","height","drawImage","lineWidth","fillStyle","lineStyle","font","i","length","fillText","toDataURL","draw","require"],"mappings":";;;;;;AAAO,IAAMA,iBAAiB,GAAG,CAC7B;AACIC,ACFR,EDEQA,CAAC,EAAE,GADP;AAEIC,EAAAA,CAAC,EAAE;AAFP,ACCG,CDF0B,EAK7B,CCHSC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,SAAD,EAA2C;ADIjEH,ACJiE,EDIjEA,CAAC,EAAE,CCJ+BI,EDGtC,OCHqE,uEAAnB,EAAmB;ADKjEH,ACLiE,EDKjEA,CAAC,EAAE,CCL+CI,KAAe,uEAAP,EAAO;ADGrE,ACDA,CDJ6B,EAS7B,MCLO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,OAAV,EAAsB;ADMrCR,ACLA,EDKAA,CAAC,EAAE,GADP,ACJUS,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;ADMAV,ACLA,EDKAA,CAAC,EAAE,GCLGW,OAAO,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAhB;ADGJ,ACDI,CDRyB,EAa7B,KCLUC,GAAG,GAAG,IAAIC,KAAJ,EAAZ;ADMAf,ACLAc,EDKAd,CAAC,CCLDc,CDKG,ECLA,CDIP,ACJQE,GAAJ,GAAUb,SAAV;ADMAF,EAAAA,CAAC,EAAE;AAFP,ACHIa,CDVyB,EAiB7B,CCPIA,GAAG,CAACG,MAAJ,GAAa,YAAM;ADQnBjB,ACPIS,EDOJT,CAAC,EAAE,CCPCS,EDMR,ICNc,CAACS,KAAP,GAAeJ,GAAG,CAACI,KAAnB;ADQJjB,ACPIQ,EDOJR,CAAC,EAAE,CCPCQ,MAAM,CAACU,MAAP,GAAgBL,GAAG,CAACK,MAApB;ADKR,ACJQP,CDbqB,CAA1B,ICaKA,OAAO,CAACQ,SAAR,CAAkBN,GAAlB,EAAuB,CAAvB,EAA0B,CAA1B;AACAF,MAAAA,OAAO,CAACS,SAAR,GAAoB,CAApB;AACAT,MAAAA,OAAO,CAACU,SAAR,GAAoB,MAApB;AACAV,MAAAA,OAAO,CAACW,SAAR,GAAoB,MAApB;AACAX,MAAAA,OAAO,CAACY,IAAR,GAAe,sBAAf;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGrB,SAAS,CAACsB,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvCb,QAAAA,OAAO,CAACe,QAAR,CAAiBtB,KAAK,CAACoB,CAAD,CAAtB,EAA2BrB,SAAS,CAACqB,CAAD,CAAT,CAAazB,CAAxC,EAA2CI,SAAS,CAACqB,CAAD,CAAT,CAAaxB,CAAxD;AACH;;AACDM,MAAAA,OAAO,CAACE,MAAM,CAACmB,SAAP,CAAiB,WAAjB,EAA8B,GAA9B,CAAD,CAAP,CAXe,CAYf;AACH,KAbD;AAcH,GApBM,CAAP;AAqBH,CAvBM;;;;AAyBA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACxB,KAAD,EAAW;AAC3BH,EAAAA,cAAc,CAAC4B,OAAO,CAAC,qBAAD,CAAR,EAAiC/B,oCAAjC,EAAoDM,KAApD,CAAd;AACH,CAFM","file":"utils.92321d2a.js","sourceRoot":"..","sourcesContent":["export const TranchesPositions = [\r\n    {\r\n        x: 230,\r\n        y: 610\r\n    },\r\n    {\r\n        x: 230,\r\n        y: 535\r\n    },\r\n    {\r\n        x: 230,\r\n        y: 429\r\n    },\r\n    {\r\n        x: 230,\r\n        y: 240\r\n    },\r\n    {\r\n        x: 230,\r\n        y: 70\r\n    },\r\n]","import { TranchesPositions } from '../data/TranchesPositions';\r\n\r\nexport const addTextToImage = (imagePath, positions = [], texts = []) => {\r\n\r\n    return new Promise((resolve, _reject) => {\r\n        const canvas = document.getElementById(\"canvas\");\r\n        const context = canvas.getContext(\"2d\");\r\n\r\n        const img = new Image();\r\n        img.src = imagePath;\r\n        img.onload = () => {\r\n            canvas.width = img.width\r\n            canvas.height = img.height\r\n            context.drawImage(img, 0, 0);\r\n            context.lineWidth = 1;\r\n            context.fillStyle = \"#FFF\";\r\n            context.lineStyle = \"#FFF\";\r\n            context.font = \"bold 30px sans-serif\";\r\n            for (let i = 0; i < positions.length; i++) {\r\n                context.fillText(texts[i], positions[i].x, positions[i].y);\r\n            }\r\n            resolve(canvas.toDataURL(\"image/png\", 1.0))\r\n            // cb(canvas.toDataURL(\"image/png\", 1.0))\r\n        };\r\n    })\r\n}\r\n\r\nexport const draw = (texts) => {\r\n    addTextToImage(require('../../images/ig.png'), TranchesPositions, texts)\r\n}"]}